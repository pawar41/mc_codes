C51 COMPILER V9.00   DAC_SINEWAVE                                                          08/31/2010 17:37:13 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DAC_SINEWAVE
OBJECT MODULE PLACED IN dac_sinewave.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE dac_sinewave.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <REG51.h>
   2          
   3          unsigned int lut[20]={0,10,17,25,35,42,50,57,65,71,77,82,87,91,95,97,99,100,100};
   4          
   5          void delay_time(unsigned int time)
   6          {
   7   1        unsigned int i,j; 
   8   1        for(i=time;i>0;i--)
   9   1        {
  10   2              for(j=0;j<50;j++);
  11   2        }
  12   1          
  13   1      }
  14          
  15          
  16          void send_dac(unsigned int dat)
  17          {
  18   1        unsigned char temp=0,cnt=8,a;
  19   1              while(cnt > 0)
  20   1              {
  21   2                      temp = temp >> 1;
  22   2                      a = dat & 0x80;
  23   2                      temp = temp | a;
  24   2                      dat = dat << 1;
  25   2                      cnt--;
  26   2              }
  27   1                      P1 = temp;
  28   1      }
  29          
  30          void main(void)
  31          {
  32   1        signed char ang=0;
  33   1      
  34   1         while(1)
  35   1         {
  36   2                                      //0-90 deg
  37   2             for(ang = 0;ang < 90; ang+=5)
  38   2                {
  39   3                      send_dac(lut[ang/5]+0x7F);
  40   3                  delay_time(0);
  41   3                }
  42   2                                      //90-180 deg
  43   2                 for(ang = 90;ang > 0; ang-=5)
  44   2                {
  45   3                              send_dac(lut[ang/5]+0x7F);
  46   3                         delay_time(0);
  47   3                }
  48   2                                      //180-270 deg
  49   2                 for(ang = 0;ang < 90; ang+=5)
  50   2                {
  51   3                              send_dac(-lut[ang/5]-0x7F);
  52   3                         delay_time(0);
  53   3                }
  54   2      
  55   2                                       //270-360 deg
C51 COMPILER V9.00   DAC_SINEWAVE                                                          08/31/2010 17:37:13 PAGE 2   

  56   2                 for(ang = 90;ang > 0; ang-=5)
  57   2                {
  58   3                              send_dac(-lut[ang/5]-0x7F);
  59   3                         delay_time(0);
  60   3                }
  61   2                
  62   2              }
  63   1      }  
  64          
  65           /*
  66          void main(void)
  67          {
  68            signed char ang=0;
  69          
  70             while(1)
  71             {
  72                                          //0-90 deg
  73                    for(ang = 0;ang < 90; ang+=5)
  74                    {
  75                                  send_dac(lut[ang/5]);
  76                             delay_time(0);
  77                    }
  78                                          //90-180 deg
  79                     for(ang = 90;ang > 0; ang-=5)
  80                    {
  81                                  send_dac(lut[ang/5]);
  82                             delay_time(0);
  83                    }
  84                                          //180-270 deg
  85                     for(ang = 0;ang < 90; ang+=5)
  86                    {
  87                                  send_dac(-lut[ang/5]);
  88                             delay_time(0);
  89                    }
  90          
  91                                           //270-360 deg
  92                     for(ang = 90;ang > 0; ang-=5)
  93                    {
  94                                  send_dac(-lut[ang/5]);
  95                             delay_time(0);
  96                    }
  97                  }
  98          }  
  99          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    207    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
